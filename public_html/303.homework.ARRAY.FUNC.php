<?php

// Видео 3_03. Тема: "Функции для работы с массивами".
// Домашнее задание.

/*
Создайте массив из нескольких чисел.
Выведите случайный элемент из этого массива, используя mt_rand().
Сделайте задачу из пункта 2, но с использованием shuffle().
 */

$arr = [12, 41, 0, 33, 54, 4, 87, 2];
print_r($arr);
echo '<br />';
var_dump($arr);
echo '<br />';
var_export($arr);
echo '<br />';

echo $arr[mt_rand(0, count($arr))]; // вывод случайного элемента массива

shuffle($arr); // перемешиваем массив
echo '<br />' . $arr[0]; // вывод 0-го элемента перемешанного массива

/*
Создайте двумерный массив с сотрудниками, где каждый сотрудник
будет представлять из себя ассоциативный массив с именем и возрастом.
Сделайте сортировку массива с помощью uasort() так, чтобы все сотрудники
были отсортированы по возрасту, например, по возрастанию.
 */

$list = [
    [
        'name' => 'Mick',
        'age' => '30'
    ],
    [
        'name' => 'Alex',
        'age' => '44'
    ],
    [
        'name' => 'Jack',
        'age' => '23'
    ],
    [
        'name' => 'Igor',
        'age' => '29'
    ],
    [
        'name' => 'Oleg',
        'age' => '54'
    ]
];

function cmp1($a, $b) // будет использоваться для сортировки по 'name'
{
    if ($a == $b) return 0;
    return ($a < $b) ? -1 : 1;
}

echo '<br /><br />';
var_dump($list); // вывод первоначального массива

uasort($list, 'cmp1'); // сортировка массива по 'name'
echo '<br /><br />';
var_dump($list); // вывод массива отсортированного по 'name'


function cmp($a, $b) // будет использоваться для сортировки по 'age'
{
    global $qwer;
    if ($a[$qwer] == $b[$qwer]) return 0;
    return ($a[$qwer] < $b[$qwer]) ? -1 : 1;
}

$qwer = 'age';
uasort($list, 'cmp'); // сортировка массива по 'age'
echo '<br /><br />';
var_dump($list); // вывод массива отсортированного по 'age'
